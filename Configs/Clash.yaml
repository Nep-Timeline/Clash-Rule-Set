# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 7892 # HTTP(S) 和 SOCKS 代理混合端口
redir-port: 7893 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7894

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

log-level: info # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录

external-controller: 0.0.0.0:9090

profile:
  # 存储 select 选择记录
  store-selected: true
  
  # 持久化 fake-ip
  store-fake-ip: true

# Tun 配置
tun:
  enable: false
  stack: gvisor # system / lwip
  dns-hijack:
    - 'any:53' # 需要劫持的 DNS
  auto-detect-interface: true # 自动识别出口网卡
  auto-route: true # 配置路由表
  # mtu: 9000 # 最大传输单元
  strict_route: true # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  # inet4_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
  #   - 0.0.0.0/1
  #   - 128.0.0.0/1
  # inet6_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
  #   - "::/1"
  #   - "8000::/1"
  # endpoint_independent_nat: false # 启用独立于端点的 NAT
  # include_uid: # UID 规则仅在 Linux 下被支持，并且需要 auto_route
  # - 0
  # include_uid_range: # 限制被路由的的用户范围
  # - 1000-99999
  # exclude_uid: # 排除路由的的用户
  #- 1000
  # exclude_uid_range: # 排除路由的的用户范围
  # - 1000-99999
  
  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto_route
  
  # include_android_user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include_package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude_package: # 排除被路由的 Android 应用包名
  # - com.android.captiveportallogin

# DNS配置
dns:
  enable: true # 关闭将使用系统 DNS
  # 开启 DNS 服务器监听
  listen: 0.0.0.0:1053
  enhanced-mode: fake-ip
  # fake-ip 池设置
  fake-ip-range: 198.18.0.1/16
  # 配置不使用fake-ip的域名
  fake-ip-filter:
     - '*.lan'
     - +.stun.*.*
     - +.stun.*.*.*
     - +.stun.*.*.*.*
     - +.stun.*.*.*.*.*
     - localhost.ptlogin2.qq.com
     # - "*.n.n.srv.nintendo.net"
     # - +.stun.playstation.net
     # - xbox.*.*.microsoft.com
     # - "*.*.xboxlive.com"
     # - "*.msftncsi.com"
     # - "*.msftconnecttest.com"
     # - WORKGROUP

  use-hosts: true # 查询 hosts

  # 用于解析 nameserver，fallback 以及其他DNS服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
    - tls://1.12.12.12:853
    - tls://223.5.5.5:853
  # DNS主要域名配置
  # 支持 UDP，TCP，DoT，DoH
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
     - 223.5.5.5 # 阿里DNS
     - 180.76.76.76 # 百度DNS
     - 119.29.29.29 # 腾讯DNS
     - 117.50.11.11 # ONE DNS拦截版 恶意网站拦截、广告过滤
     - 117.50.10.10 # ONE DNS纯净版 直接返回其真实的响应结果
     - 114.114.114.114 # 114DNS
     - 8.8.8.8 # Google DNS
     - 1.1.1.1 # Cloudflare DNS
     - https://doh.pub/dns-query # DNS over HTTPS
     - https://dns.alidns.com/dns-query # 阿里 DoH DNS
     - https://doh.360.cn/dns-query # 360 DoH DNS
     - https://cloudflare-dns.com/dns-query # Cloudflare DoH DNS
     - https://dns.google/dns-query # Google DoH DNS

  # 配置查询需代理域名使用的 DNS 服务器
  # proxy-server-nameserver:
  #    - https://doh.pub/dns-query

  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
  fallback:
     - 8.8.8.8 # Google DNS
     - 1.1.1.1 # Cloudflare DNS
     - https://doh.pub/dns-query
     - https://dns.rubyfish.cn/dns-query
     - https://cloudflare-dns.com/dns-query
     - https://dns.google/dns-query
  # 配置 fallback 使用条件
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - '*.lan'
      - 240.0.0.0/4,
      - 0.0.0.0/32

# rule-providers:
  # exploit-checker:
    # type: http
    # behavior: domain
    # url: "https://Nep-Timeline.github.io/Clash-Rule-Set/Configs/CFW-Settings.yaml"
    # path: ./CFW-Settings.yaml
    # interval: 86400
