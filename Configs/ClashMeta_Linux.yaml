# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 7892 # HTTP(S) 和 SOCKS 代理混合端口
redir-port: 7893 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
tproxy-port: 7894

geodata-mode: true

unified-delay: true

tcp-concurrent: true         #【Meta专属】TCP连接并发，如果域名解析结果对应多个IP，并发所有IP，选择握手最快的IP进行连接

# TCP keep alive interval
keep-alive-interval: 30

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

authentication: # http,socks 入口的验证用户名，密码
  - "root:root"
skip-auth-prefixes: # 设置跳过验证的 IP 段
  - 127.0.0.1/8
  - ::1/128
lan-allowed-ips: # 允许连接的 IP 地址段，仅作用于 allow-lan 为 true, 默认值为 0.0.0.0/0 和::/0
  - 0.0.0.0/0
  - ::/0
lan-disallowed-ips: # 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
  - 192.168.0.3/32

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

#自定义 geodata url
geox-url:
  geoip: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb"

log-level: error # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录

external-controller: 0.0.0.0:9090
external-ui: ./dashboard
secret: "admin"

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome
geodata-loader: memconservative # memconservative (Low memory), standard

# iptables:
#   enable: false

profile:
  # 存储 select 选择记录
  store-selected: true
  # 持久化 fake-ip
  store-fake-ip: true

sniffer:
  enable: true
  # force-dns-mapping: true
  # parse-pure-ip: true
  override-destination: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443]

# Tun 配置
tun:
  enable: true
  stack: mixed # gvisor / mixed / system
  dns-hijack:
    - any:53 # 需要劫持的 DNS
  auto-detect-interface: true # 自动识别出口网卡
  # auto-redirect: false # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
  auto-route: true # 配置路由表
  # strict-route: true # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  route-exclude-address:
    - 192.168.0.0/16
    - fc00::/7
  
  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto_route
  
  # include_android_user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include_package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude_package: # 排除被路由的 Android 应用包名
  #  - android.process.media

# DNS配置
dns:
  # cache-algorithm: arc
  enable: true # 关闭将使用系统 DNS
  # prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  # 开启 DNS 服务器监听
  listen: 0.0.0.0:1053
  ipv6: true # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  enhanced-mode: redir-host # fake-ip
  # fake-ip 池设置
  fake-ip-range: 198.18.0.1/16
  # use-hosts: true # 查询 hosts
  # DNS主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  nameserver:
     - https://dns.cloudflare.com/dns-query # Cloudflare DoH DNS
     - https://dns.google/dns-query # Google DoH DNS
  # 配置查询域名使用的 DNS 服务器
  nameserver-policy:
    "geosite:cn,private":
      - https://doh.pub/dns-query # DNSPod DoH DNS
      - https://dns.alidns.com/dns-query # 阿里 DoH DNS
      - https://doh.360.cn/dns-query # 360 DoH DNS
      - https://dns.rubyfish.cn/dns-query # Rubyfish DoH DNS
    "geosite:geolocation-!cn":
      - https://dns.cloudflare.com/dns-query # Cloudflare DoH DNS
      - https://dns.google/dns-query # Google DoH DNS
